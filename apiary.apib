FORMAT: 1A
HOST: http://hub.wattbike.com/

# Wattbike

This API provides access to the **Wattbike** service. You can manage accounts and user sessions. Gets workouts and categories.

## Status API [/api/ranking]

### Get the status API  [GET]
+ Request (application/json)

    + Headers
            
            X-API-KEY : AY7JsQof82R3NTaZu0KSzJJLiR364cSk
            Accept : application/json

+ Response 200 (application/json)
            
            {
                "status": "live"
            }

## Account Registration [/api/ranking/users]

### Update account password [PUT]

You may update password using this action. It takes a JSON
object containing an account email address and a new password. 
- If the new password is less than 6 characters, service returns error with status code 400.
- If the new password is more than 6 characters, service returns JSON object with user id and authantication token.

+ Request (application/json)

    + Headers

            X-API-KEY : AY7JsQof82R3NTaZu0KSzJJLiR364cSk
            Accept : application/json

    + Body

            {
                "emailAddress": "{dynamicEmail}",
                "password": "dd"
            }
   
+ Response 400 (application/json)

        {
            "error": "Password too short - minimum 6 characters"
        }

+ Response 200 (application/json)

        {
            "authenticationToken": "044548a18337899b8dac630fe9d5f2bb",
            "userId": "648563f5968a2586"
        }

### Account sign-in [POST]

You may sign-in in the application using this action. 
It takes a JSON object containing an account email address and an account password

+ Request (application/json)

    + Headers

            X-API-KEY : AY7JsQof82R3NTaZu0KSzJJLiR364cSk
            Accept : application/json

    + Body

            {
                "emailAddress": "andymccorkell@gmail.com",
                "password": "hQeqLhnM22"
            }

+ Response 200 (application/json)

        {
            "authenticationToken": "f89f3332a012b1beb4e66d5f783a04e8",
            "userId": "92855eb01cdd9fa1"
        }
   
## Token Verification [/api/ranking/auths]

### Send token verification [POST]

You may send token verification using this action. It takes a JSON
object containing a token. If this is a valid token, 
service return user account releated to this token and the same token.

+ Request (application/json)

    + Headers

            X-API-KEY : AY7JsQof82R3NTaZu0KSzJJLiR364cSk
            Accept : application/json

    + Body

            {
                 "authenticationToken": "f89f3332a012b1beb4e66d5f783a04e8"
            }
            
+ Response 200 (application/json)

        {
            "account": "andymccorkell@gmail.com",
            "authenticationToken": "f89f3332a012b1beb4e66d5f783a04e8"
        }
        

## Session Put [/api/ranking/sessions]

### Update user session [PUT]
Every user in **Wattbike** has a individual training session. 
You can update user session using this action. It takes a JSON
object containing an account information (email) and training session information, such as data of labs.
That service returns user session id, link to the session and username.

+ Request (application/json)

    + Headers

            X-API-KEY : AY7JsQof82R3NTaZu0KSzJJLiR364cSk
            Accept : application/json

    + Body

            {
                "dataVersion": 1.2,
                "serialNumber": 25010062,
                "firmwareVersion": 1.22,
                "deviceUserAgent": "Apple-iPhone/501.347",
                "commId": 1,
                "startDate": "{dateTime}",
                "account": "wattbike:andymccorkell@gmail.com",
                "title": "A custom title string",
                "weight": 96.0,
                "maximumHeartRate": 180.0,
                "maximumMinutePower": 123,
                "latLong": "xxxxxxxx",
                "altitude": "xxxxxxxx",
                 "laps":[
                  {
                   "lap":1,
                   "data":[
                          {{rows}}
                          ]
                  },
                  {
                   "lap": 2,
                   "data": [
                                {{rows}}
                           ]
                  },
                  {
                   "lap": 3,
                   "data": [
                                {{rows}}
                           ]
                  }
                 ]
            }
            
+ Response 200 (application/json)

        {
            "sessionId": "5fda18d98a5c66ab41f34da47daaef33",
            "sessionLink": "http://hub.wattbike.com/andymccorkell/session/5fda18d98a5c66ab41f34da47daaef33",
            "username": "andymccorkell"
        }

## Session Process Status [/api/ranking/status]

### Get the session status [POST]

+ Request (application/json)

    + Headers

            X-API-KEY : AY7JsQof82R3NTaZu0KSzJJLiR364cSk
            Accept : application/json

    + Body

            {
                "sessionId": "b9aab02edb52ebb7639f0189ca1faa30"
            }
            
+ Response 200 (application/json)

        {
            "statusId": "3",
            "statusDescription": "Processing Complete"
        }

## Firmware [/api/ranking/firmware]

### Get the new version of device firmware [GET]

You can get the new version of device software using this action.

+ Request (application/json)

    + Headers

            X-API-KEY : AY7JsQof82R3NTaZu0KSzJJLiR364cSk
            Accept : application/json
            
+ Response 200 (application/json)

        {
            "firmwareVersion": "1.23.00",
            "firmwareReleaseDate": "2015-08-10",
            "firmwareLink": "http://wattbike.com/assets/software/Wattbike-ModelB-firmware-V12300-20150810.bin"
        }

## Users get [/api/ranking/users/id/{userid}]

### Get the user information [GET]

You can get the user information using this action. 
You must sets the user id in Parameters. 
This is an optional example with user id 92855eb01cdd9fa1.

+ Parameters
      + userid (number, optional)  ... ID of our User.
      
         + Default: 92855eb01cdd9fa1
      
+ Request (application/json)

    + Headers

            X-API-KEY : AY7JsQof82R3NTaZu0KSzJJLiR364cSk
            Accept : application/json
            
+ Response 200 (application/json)

        {
            "id": "92855eb01cdd9fa1",
            "username": "andymccorkell",
            "firstName": "Andy",
            "surname": "McCorkell",
            "displayName": "Andy M",
            "gender": "m",
            "dob": "362185200",
            "country": "GB",
            "profileImage": "http://hub.wattbike.com/files/thumb/1_5Ypgfl4N0CayFTwt.jpg",
            "joined": "2014-04-01 10:43:56",
            "group": "1",
            "mmp": 234,
            "mhr": 112,
            "ftp": 201,
            "weight": 100,
            "wbMonitors": [
                "00000000",
                "00000000",
                "00000000",
                "00000000"
            ],
            "hrMonitors": [
                "00000000",
                "00000000",
                "00000000",
                "00000000"
            ],
            "settings": {
                "distance": "km",
                "workoutType": "ftp"
            }
        }

## Workouts List [/api/ranking/workouts]

### List all Workouts  [GET]

A response is defined as a list item within an action.
Lists are created by preceding list items with either a +, * or -.

This action returns a 200 status code along with a JSON body.
      
+ Request (application/json)

    + Headers

            X-API-KEY : AY7JsQof82R3NTaZu0KSzJJLiR364cSk
            Accept : application/json
            
+ Response 200 (application/json)

        {
            "id": "92855eb01cdd9fa1",
            "username": "andymccorkell",
            "firstName": "Andy",
            "surname": "McCorkell",
            "displayName": "Andy M",
            "gender": "m",
            "dob": "362185200",
            "country": "GB",
            "profileImage": "http://hub.wattbike.com/files/thumb/1_5Ypgfl4N0CayFTwt.jpg",
            "joined": "2014-04-01 10:43:56",
            "group": "1",
            "mmp": 234,
            "mhr": 112,
            "ftp": 201,
            "weight": 100,
            "wbMonitors": [
                "00000000",
                "00000000",
                "00000000",
                "00000000"
            ],
            "hrMonitors": [
                "00000000",
                "00000000",
                "00000000",
                "00000000"
            ],
            "settings": {
                "distance": "km",
                "workoutType": "ftp"
            }
        }
